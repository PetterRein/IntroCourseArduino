
// Pin 13 has an LED connected on most Arduino boards.
// give it a name:

//Lagrer plasseringen for Lys og Sensor for enkeler kode snere
int redLed = 12;
int yellowLed1 = 11;
int yellowLed2 = 10;
int yellowLed3 = 9;
int greenLed   = 8; 
const int trigPin = 3;
const int echoPin = 4;
long duration;
int distance;

// the setup routine runs once when you press reset:
void setup() {
  // initialize the digital pin as an output.
  pinMode(redLed, OUTPUT); //Setter pinsa som output og lys
  pinMode(yellowLed1, OUTPUT);
  pinMode(yellowLed2, OUTPUT);
  pinMode(yellowLed3, OUTPUT);
  pinMode(greenLed, OUTPUT);
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600); // Starts the serial communication
}

// the loop routine runs over and over again forever:
void loop() {
  distance = ping();
  if(distance <= 40 && distance >= 30){
    digitalWrite(redLed, HIGH);
    digitalWrite(yellowLed1, LOW);
    digitalWrite(yellowLed2, LOW);
    digitalWrite(yellowLed3, LOW);
    digitalWrite(greenLed, LOW);
  }
  else if(distance <= 30 && distance >= 20){
    digitalWrite(redLed, HIGH);
    digitalWrite(yellowLed1, HIGH);
    digitalWrite(yellowLed2, LOW);
    digitalWrite(yellowLed3, LOW);
    digitalWrite(greenLed, LOW);
  }
  else if(distance <=20 && distance >=10){
    digitalWrite(redLed, HIGH);
    digitalWrite(yellowLed1, HIGH);
    digitalWrite(yellowLed2, HIGH);
    digitalWrite(yellowLed3, LOW);
    digitalWrite(greenLed, LOW);
  }
  else if(distance <=10 && distance >=8){
    digitalWrite(redLed, HIGH);
    digitalWrite(yellowLed1, HIGH);
    digitalWrite(yellowLed2, HIGH);
    digitalWrite(greenLed, LOW);
    digitalWrite(yellowLed3, HIGH);    
  }
  else if(distance <= 8 ){
    digitalWrite(redLed, HIGH);
    digitalWrite(yellowLed1, HIGH);
    digitalWrite(yellowLed2, HIGH);
    digitalWrite(yellowLed3, HIGH);
    digitalWrite(greenLed, HIGH);
  }
  else{
   turnOffAllLed(); 
  }
}

void turnOffAllLed(){
  digitalWrite(redLed, LOW);   // turn the LED off (LOW is the voltage level)
  digitalWrite(yellowLed1, LOW);
  digitalWrite(yellowLed2, LOW);
  digitalWrite(yellowLed3, LOW);
  digitalWrite(greenLed, LOW);
}

void turnOnAllLedForCheck(){
  digitalWrite(redLed, HIGH);   // turn the LED on (HIGH is the voltage level)
  digitalWrite(yellowLed1, HIGH);
  digitalWrite(yellowLed2, HIGH);
  digitalWrite(yellowLed3, HIGH);
  digitalWrite(greenLed, HIGH);  
  delay(1000);               // wait for a second
  digitalWrite(redLed, LOW);   // turn the LED off (LOW is the voltage level)
  digitalWrite(yellowLed1, LOW);
  digitalWrite(yellowLed2, LOW);
  digitalWrite(yellowLed3, LOW);
  digitalWrite(greenLed, LOW);
  delay(1000);               // wait for a second
}


int ping() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2); //Må ha delay for sikkerthet og at spenningen skal gå ned
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH); //Sender at lydSignal ut
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance= duration*0.034/2;
  // Prints the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.println(distance);
  return distance;
}